###############################################################################
# .env.example - Environment Variables for MongoDB Docker Configuration
#
# This file serves as a template. Copy it to a local file named .env
# and adjust the values below as needed.
###############################################################################
# Indicates which environment file is being used for configuration.
ENV_FILE=".env"

###############################################################################
# MongoDB Authentication
# IMPORTANT: You MUST change the default password for any production environment.
# These credentials are used to create the root user when the database is
# first created.
###############################################################################
MONGO_INITDB_ROOT_USERNAME="root"
MONGO_INITDB_ROOT_PASSWORD="your-very-strong-and-secret-password"

###############################################################################
# MongoDB Configuration
###############################################################################
# Docker image for MongoDB.
# You can change "7.0" to "8.0" or other versions as needed.
# Find tags on Docker Hub: https://hub.docker.com/_/mongo
MONGO_DOCKER_IMAGE_NAME="mongo:7.0"

# Container name for MongoDB.
MONGO_CONTAINER_NAME="mongo"

# Restart policy for the MongoDB container.
# "unless-stopped" ensures that MongoDB restarts automatically unless explicitly stopped.
MONGO_CONTAINER_RESTART="unless-stopped"

###############################################################################
# Port Mappings for MongoDB
###############################################################################
# External host port mapped to the internal container port.
MONGO_EXTERNAL_PORT="27017"
# Internal port MongoDB listens on inside the container.
# IMPORTANT: This MUST match the port specified in your mongod.conf file.
MONGO_INTERNAL_PORT="27017"

###############################################################################
# Paths for MongoDB Data, Logs, and Configuration
###############################################################################
# Path on the host where MongoDB will store its persistent data.
MONGO_DATA_PATH="./data"

# Path on the host where MongoDB log files will be stored.
LOG_PATH="./logs"

# Path to the MongoDB configuration file on the host.
MONGO_CONFIG_FILE_PATH="./mongod.conf"

# Path to the directory on the host containing initialization scripts (*.js, *.sh).
# These scripts are run only once when the database is first created.
MONGO_INIT_SCRIPTS_PATH="./init-scripts"

###############################################################################
# MongoDB Health Check Settings (for Docker Compose)
###############################################################################
# Command to test if MongoDB is healthy. It attempts to ping the server as the root user.
MONGO_HEALTHCHECK_TEST='["CMD", "mongosh", "--eval", "db.runCommand({ ping: 1 })", "--host", "localhost", "-u", "${MONGO_INITDB_ROOT_USERNAME}", "-p", "${MONGO_INITDB_ROOT_PASSWORD}", "--authenticationDatabase", "admin"]'

# Time interval between health checks.
MONGO_HEALTHCHECK_INTERVAL="25s"

# Maximum time to wait for a health check to respond.
MONGO_HEALTHCHECK_TIMEOUT="10s"

# Number of consecutive failures required to mark the container as unhealthy.
MONGO_HEALTHCHECK_RETRIES="5"